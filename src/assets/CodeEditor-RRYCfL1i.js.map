{"version":3,"file":"CodeEditor-RRYCfL1i.js","sources":["../../src/components/shared/CodeEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"border-2 code-editor\">\r\n    <div ref=\"editor\" class=\"full-width full-height\" />\r\n\r\n    <div class=\"code-editor__actions\">\r\n      <div class=\"inline-block\">\r\n        <q-btn :disable=\"!validJson\" round flat dense icon=\"unfold_more\"\r\n               :title=\"t('shared.code_editor.actions.expand_all.title')\" @click=\"expandAll\" />\r\n        <q-btn :disable=\"!validJson\" round flat dense icon=\"unfold_less\"\r\n               :title=\"t('shared.code_editor.actions.collapse_all.title')\" @click=\"collapseAll\" />\r\n        <copy-button round flat dense :custom-handler=\"copyContent\" />\r\n      </div>\r\n\r\n      <div class=\"inline-block\">\r\n        <q-btn icon=\"settings\" round flat dense>\r\n          <q-menu style=\"white-space: nowrap\" dense anchor=\"bottom right\" self=\"top end\">\r\n            <q-item>\r\n              <q-btn :disable=\"!validJson\"\r\n                     :title=\"t('shared.code_editor.actions.beautify.title')\"\r\n                     color=\"dark-grey\"\r\n                     class=\"full-width\"\r\n                     @click=\"beautifyEditorValue\">\r\n                <q-icon dense name=\"auto_fix_normal\" />\r\n                {{ t('shared.code_editor.actions.beautify.text') }}\r\n              </q-btn>\r\n            </q-item>\r\n\r\n            <q-separator />\r\n\r\n            <q-item dense class=\"q-py-sm\">\r\n              <q-checkbox v-model=\"codeEditorStore.wrapLines\" size=\"32px\"\r\n                          dense\r\n                          :label=\"t('shared.code_editor.actions.wrap_lines.label')\"\r\n                          :title=\"t('shared.code_editor.actions.wrap_lines.title')\" />\r\n            </q-item>\r\n          </q-menu>\r\n        </q-btn>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n  import { computed, Ref, ref, toRef } from 'vue'\r\n  import { useCodeEditor } from '../../composables/CodeEditor'\r\n  import { useCodeEditorStore } from '../../store/codeEditor.ts'\r\n  import CopyButton from './CopyButton.vue'\r\n  import { useTranslation } from '../../composables/i18n'\r\n  import { KeyBinding } from '@codemirror/view'\r\n\r\n  const props = defineProps<{ modelValue: string, commands?: KeyBinding[], onPaste?: (data: string) => void }>()\r\n  const emit = defineEmits(['update:modelValue'])\r\n  const t = useTranslation()\r\n  const codeEditorStore = useCodeEditorStore()\r\n\r\n  const editor: Ref<HTMLElement | null> = ref(null)\r\n  const { copyContent, beautifyEditorValue, collapseAll, expandAll } = useCodeEditor(editor, {\r\n    initialValue: toRef(props, 'modelValue'),\r\n    commands: props.commands,\r\n    emit,\r\n    onPaste: props.onPaste\r\n  })\r\n\r\n  const validJson = computed(() => {\r\n    if (props.modelValue === '') return true\r\n    try {\r\n      JSON.parse(props.modelValue)\r\n      return true\r\n    } catch (_e) {\r\n      return false\r\n    }\r\n  })\r\n</script>\r\n"],"names":["props","__props","emit","__emit","t","useTranslation","codeEditorStore","useCodeEditorStore","editor","ref","copyContent","beautifyEditorValue","collapseAll","expandAll","useCodeEditor","toRef","validJson","computed"],"mappings":"4dAkDE,MAAMA,EAAQC,EACRC,EAAOC,EACPC,EAAIC,EAAe,EACnBC,EAAkBC,EAAmB,EAErCC,EAAkCC,EAAI,IAAI,EAC1C,CAAE,YAAAC,EAAa,oBAAAC,EAAqB,YAAAC,EAAa,UAAAC,CAAU,EAAIC,EAAcN,EAAQ,CACzF,aAAcO,EAAMf,EAAO,YAAY,EACvC,SAAUA,EAAM,SAChB,KAAAE,EACA,QAASF,EAAM,OAAA,CAChB,EAEKgB,EAAYC,EAAS,IAAM,CAC3B,GAAAjB,EAAM,aAAe,GAAW,MAAA,GAChC,GAAA,CACG,YAAA,MAAMA,EAAM,UAAU,EACpB,QACI,CACJ,MAAA,EAAA,CACT,CACD"}